{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "creating, EC2, Kinesis, DynamoDB and SNS Using cloud formation template",
    "Parameters": {
        "TopicName": {
            "Type": "String",
            "Description": "Topic Name",
            "Default": "m03p02_anomaly_alerts"
        }
    },
	"Resources": {
		"TestVPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": "10.0.0.0/16",
				"EnableDnsHostnames": "true",
				"EnableDnsSupport": "true",
				"Tags": [{
					"Key": "Name",
					"Value": "TestVPC"
				}]
			}
		},
		"Subnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "TestVPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": "Subnet1"
				}],
				"CidrBlock": "10.0.1.0/24",
				"AvailabilityZone": "us-east-1a",
				"MapPublicIpOnLaunch": "true"
			}
		},
		"Subnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "TestVPC"
				},
				"CidrBlock": "10.0.2.0/24",
				"AvailabilityZone": "us-east-1b",
				"MapPublicIpOnLaunch": "true",
				"Tags": [{
					"Key": "Name",
					"Value": "Subnet2"
				}]
			}
		},
		"TestSG": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"SecurityGroupIngress": [{
						"IpProtocol": "tcp",
						"FromPort": 80,
						"ToPort": 80,
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": 22,
						"ToPort": 22,
						"CidrIp": "0.0.0.0/0"
					}
				],
				"VpcId": {
					"Ref": "TestVPC"
				},
				"GroupDescription": "Allows HTTP and SSH",
				"Tags": [{
					"Key": "Name",
					"Value": "TestSG"
				}]
			}
		},
		"MyEC2Instance": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.micro",
				"ImageId": "ami-048f6ed62451373d9",
				"KeyName": "cloudformationProject1",
				"NetworkInterfaces": [{
					"SubnetId": {
						"Ref": "Subnet1"
					},
					"GroupSet": [{
						"Ref": "TestSG"
					}],
					"DeviceIndex": "0",
					"DeleteOnTermination": "true"
				}],
				"Tags": [{
					"Key": "Name",
					"Value": "CloudprojectEC2"
				}]
			}
		},
		"TestIG": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
					"Key": "Name",
					"Value": "TestIG"
				}]
			}
		},
		"RouteTable1": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "TestVPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": "RouteTable1"
				}]
			}
		},
		"RouteTable2": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "TestVPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": "RouteTable2"
				}]
			}
		},
		"myRoute1": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "RouteTable1"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "TestIG"
				}
			}
		},
		"myRoute2": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "RouteTable2"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "TestIG"
				}
			}
		},
		"mySubnetRouteTableAssociation1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "Subnet1"
				},
				"RouteTableId": {
					"Ref": "RouteTable1"
				}
			}
		},
		"mySubnetRouteTableAssociation2": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "Subnet2"
				},
				"RouteTableId": {
					"Ref": "RouteTable2"
				}
			}
		},
		"IGAttachment": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"InternetGatewayId": {
					"Ref": "TestIG"
				},
				"VpcId": {
					"Ref": "TestVPC"
				}
			}
		},
		"TestALB": {
			"Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
			"Properties": {
				"IpAddressType": "ipv4",
				"Name": "TestALB",
				"SecurityGroups": [{
					"Ref": "TestSG"
				}],
				"Subnets": [{
					"Ref": "Subnet1"
				}, {
					"Ref": "Subnet2"
				}],
				"Tags": [{
					"Key": "Name",
					"Value": "TestALB"
				}]
			}
		},
		"MyDynamoDB": {
			"Type": "AWS::DynamoDB::Table",
			"Properties": {
				"AttributeDefinitions": [
                    {
						"AttributeName": "timestamp",
						"AttributeType": "S"
					},
					{
						"AttributeName": "deviceid",
						"AttributeType": "S"
					}
				],
				"KeySchema": [{
						"AttributeName": "deviceid",
						"KeyType": "HASH"
					},
					{
						"AttributeName": "timestamp",
						"KeyType": "RANGE"
					}
				],
				"TableName": "m03p02_anomaly_data",
				"Tags": [{
					"Key": "Name",
					"Value": "m03p02_anomaly_data"
				}],
				"ProvisionedThroughput": {
					"ReadCapacityUnits": 5,
					"WriteCapacityUnits": 5
				}
			}
		},
		"MyKinesisStream": {
			"Type": "AWS::Kinesis::Stream",
			"Properties": {
				"Name": "m03p02_raw_data_stream",
				"RetentionPeriodHours": 24,
				"ShardCount": 3,
				"Tags": [{
					"Key": "Name",
					"Value": "m03p02_raw_data_stream"
				}]
			}
		},
		"MyTopic": {
			"Type": "AWS::SNS::Topic",
            "Properties": {
                "Subscription": [
                    {
                        "Endpoint": "rahulmohang@gmail.com",
                        "Protocol": "email"
                    }
                ],
                "TopicName": {
                    "Ref": "TopicName"
                            }
            	}
        }
		

	}
}